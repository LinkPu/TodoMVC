{"remainingRequest":"/home/jarvis/coding/gitlab/training15-todo-mvc/todo-mvc/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jarvis/coding/gitlab/training15-todo-mvc/todo-mvc/frontend/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/jarvis/coding/gitlab/training15-todo-mvc/todo-mvc/frontend/src/App.vue","mtime":1575879201922},{"path":"/home/jarvis/coding/gitlab/training15-todo-mvc/todo-mvc/frontend/node_modules/css-loader/dist/cjs.js","mtime":1575507635978},{"path":"/home/jarvis/coding/gitlab/training15-todo-mvc/todo-mvc/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1575507636816},{"path":"/home/jarvis/coding/gitlab/training15-todo-mvc/todo-mvc/frontend/node_modules/postcss-loader/src/index.js","mtime":1575507636224},{"path":"/home/jarvis/coding/gitlab/training15-todo-mvc/todo-mvc/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1575507633447},{"path":"/home/jarvis/coding/gitlab/training15-todo-mvc/todo-mvc/frontend/node_modules/vue-loader/lib/index.js","mtime":1575507636816}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50b2RvLWRpdiB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHdpZHRoOiAxMDAlOwogIG1hcmdpbjogNXB4OwogIHRvcDogMTAwcHg7CiAgYmFja2dyb3VuZDogI2ZmZjsKICBsZWZ0OiAyNSU7Cn0KLmlucHV0LWJveCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogNDBweDsKICBsZWZ0OiAyNSU7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpLCB0cmFuc2xhdGVZKC01MCUpOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKCn0KLnRvZG8tZGl2IGlucHV0IHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgaGVpZ2h0OiA0MHB4OwogIHdpZHRoOiA1MCU7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOwogIGZyb250LXNpemU6IGluaGVyaXQ7Cn0KLnRvZG8tZGl2IC50b2RvLWxpc3QgewogIHRvcDogNTBweDsKICBtYXgtaGVpZ2h0OiA0MDBweDsKICBiYWNrZ3JvdW5kOiAjY2NjOwogIG92ZXJmbG93OiBhdXRvOwp9Ci5idG4tbGlzdCB7CiAgcGFkZGluZzogMTBweCAyMHB4OwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmJ0bi1saXN0IGJ1dHRvbiB7CiAgYm9yZGVyOiBub25lCn0KLmJ0bi1saXN0IGJ1dHRvbjpob3ZlciB7CiAgYm9yZGVyOiAxcHggc29saWQgI2ViZWRmMDsKfQouYnRuLWxpc3QgYTpob3ZlciB7CiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"todo-div\">\n      <van-field v-model=\"newTodo\" class=\"input-box\" @keyup.enter=\"submitTodo\"></van-field>\n      <van-list class=\"todo-list\">\n        <van-cell v-for=\"(item, index) in dataList\" v-bind:key=\"item.id\" icon=\"circle\">\n          <todo :content=\"item.content\" :index=\"index\" @handleDel=\"handleDel\"></todo>\n        </van-cell>\n      </van-list>\n      <div v-if=\"dataList.length > 0\" class=\"btn-list\">\n        <label v-if=\"dataList.length = 1\">1 item left</label>\n        <label v-else>2 items left</label>\n        <van-button type=\"default\" text=\"all\"></van-button>\n        <van-button type=\"default\" text=\"active\"></van-button>\n        <van-button type=\"default\" text=\"complete\"></van-button>\n        <a>clear completed</a>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { List, Cell, Field, Button } from 'vant'\nimport Todo from './components/Todo.vue';\n\n\nexport default {\n  name: 'app',\n  components: {\n    Todo,\n    [List.name]: List,\n    [Cell.name]: Cell,\n    [Field.name]: Field,\n    [Button.name]: Button,\n  },\n  data() {\n    return {\n      newTodo: \"\",\n      dataList: [],\n    }\n  },\n  methods: {\n    submitTodo() {\n      if (!this.newTodo) {\n        return\n      }\n      var todoItem = {content: this.newTodo, status: true};\n      this.dataList.push(todoItem);\n      this.newTodo = \"\";\n    },\n    handleDel(index) {\n      this.dataList.splice(index, 1);\n    },\n    ajax(method, url, data, callback, flag) {\n      var xhr = 'null';\n      if (window.XMLHttpRequest) {\n        xhr = new XMLHttpRequest();\n      }\n      method = method.toUpperCase();\n      if (method == 'GET') {\n        xhr.open('GET', url+'?'+data, flag);\n        xhr.send();\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState == 4) {\n            if (xhr.status == 200) {\n              callback(xhr.responseText);\n            }\n          }\n        }\n      } else if (method == 'POST') {\n        xhr.open('post', url, flag);\n        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n        xhr.send(data);\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState == 4) {\n            if (xhr.state == 200) {\n              callback(xhr.responseText);\n            }\n          }\n        }\n      }\n    }\n  },\n}\n\n\n\n\n</script>\n\n<style>\n.todo-div {\n  position: relative;\n  width: 100%;\n  margin: 5px;\n  top: 100px;\n  background: #fff;\n  left: 25%;\n}\n.input-box {\n  position: absolute;\n  width: 100%;\n  height: 40px;\n  left: 25%;\n  transform: translateX(-50%), translateY(-50%);\n  display: flex;\n  flex-direction: column;\n\n}\n.todo-div input {\n  position: absolute;\n  height: 40px;\n  width: 50%;\n  transform: translateX(-50%);\n  front-size: inherit;\n}\n.todo-div .todo-list {\n  top: 50px;\n  max-height: 400px;\n  background: #ccc;\n  overflow: auto;\n}\n.btn-list {\n  padding: 10px 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.btn-list button {\n  border: none\n}\n.btn-list button:hover {\n  border: 1px solid #ebedf0;\n}\n.btn-list a:hover {\n  text-decoration: underline;\n  cursor: pointer;\n}\n</style>\n"]}]}